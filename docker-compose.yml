services:
  observe_api:
    build: .
    container_name: observe-api
    restart: unless-stopped
    # depends_on:
    #   db:
    #     condition: service_healthy
    environment:
      OBSERVE_API_PORT: ${OBSERVE_API_PORT}
      OBSERVE_DB_DATABASE: ${OBSERVE_DB_DATABASE}
      OBSERVE_DB_PASSWORD: ${OBSERVE_DB_PASSWORD}
      OBSERVE_DB_USERNAME: ${OBSERVE_DB_USERNAME}
      OBSERVE_DB_PORT: ${OBSERVE_DB_PORT}
      OBSERVE_DB_HOST: ${OBSERVE_DB_HOST}
      OBSERVE_DB_SCHEMA: ${OBSERVE_DB_SCHEMA}
      OBSERVE_HASH_SECRET: ${OBSERVE_HASH_SECRET}
    ports:
      - "9000:$OBSERVE_API_PORT"
    healthcheck:
      test: curl --fail http://localhost:9000/health || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s

  migrate:
    image: migrate/migrate
    environment:
      POSTGRES_DB: ${OBSERVE_DB_DATABASE}
      POSTGRES_HOST: ${OBSERVE_DB_HOST}
      POSTGRES_PORT: ${OBSERVE_DB_PORT}
      POSTGRES_USER: ${OBSERVE_DB_USERNAME}
      POSTGRES_PASSWORD: ${OBSERVE_DB_PASSWORD}
    volumes:
      - ./migrations:/migrations
    # depends_on:
    #   db:
    #     condition: service_healthy
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB?sslmode=disable",
        "up",
      ]
